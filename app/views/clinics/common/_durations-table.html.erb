<table id="duration-table">
	<tr class="title">
		<th></th>
		<% [1,2,3,4,5,6,0].each do |wd| %>
		<th>
			<div class="btnGy_d"><%= ch_wday(wd) %></div>
		</th>
		<% end %>
	</tr>
	<% row = 0 %>
	<% (6..23).each do |hour| %>
	<% [0, 30].each do |minute| %>
	<tr class="content">
		<td class="title">
			<span><%= minute == 0 ? hour_minute_format(hour, minute) : "" %></span>
		</td>
		<% [1,2,3,4,5,6,0].each_with_index do |wday, col| %>
		<td class= "content <%= "#{minute == 0 ? "solid" : "dashed"}" %>">
			<% wday_hour_minute = wday_hour_minute_format(wday, hour, minute) %>
			<% next_wday_hour_minute = wday_hour_minute_format(wday, hour, minute + 15) %>
			<%= check_input.call(wday_hour_minute) %>
			<%= check_input.call(next_wday_hour_minute) %>
			<%= content_tag :div, data: {row: row, col: col}, class: "reveal", id: "reveal-#{row}-#{col}" do %>
			<% end %>
		</td>
		<% end %>
	</tr>
	<% row += 1 %>
	<% end %>
	<% end %>
</table>

<script type="text/javascript">
	$(function(){
		var tableBox = $("#duration-table");
		var selecting = {
			mode: "idle",
			selectedToTrue: null,
			startPoint: null,
			endPoint: null
		};
		tableBox.find("tr.content td.content .reveal").on("mousedown", function(e){
			var row = $(this).data('row');
			var col = $(this).data('col');
			selecting = {
				mode: "selecting",
				selectedToTrue: !$(this).siblings("input[type='checkbox']")[0].checked,
				startPoint: {row: row, col: col},
				endPoint: {row: row, col: col}
			}
			updateSelectingReveal();
		});
		tableBox.find("tr.content td.content .reveal").on("mouseover", function(e){
			console.log("mouseover");
			if(selecting.mode == "selecting"){
				var row = $(this).data('row');
				var col = $(this).data('col');
				selecting.endPoint = {row: row, col: col};
				updateSelectingReveal();
			}
		});
		$(document).on("mouseup", function(e){
			setSelectingReveal();
			clearSelectingReveal();
			resetSelecting();
		});
		var resetSelecting = function(){
			selecting = {
				mode: "idle",
				selectedToTrue: null,
				startPoint: null,
				endPoint: null
			}			
		}
		var setSelectingReveal = function(){
			tableBox.find(".selecting_to_true").each(function(i, elm){
				$(elm).siblings("input[type='checkbox']").each(function(i, elm){
					elm.checked = true
				});
			});
			tableBox.find(".selecting_to_false").each(function(i, elm){
				$(elm).siblings("input[type='checkbox']").each(function(i, elm){
					elm.checked = false
				});
			});			
		}
		var updateSelectingReveal = function(){
			var ranges = getSelectingRange(selecting.startPoint, selecting.endPoint);
			var ids = ranges.map(function(range){
				return "reveal-" + range.row + "-" + range.col;
			});
			clearSelectingReveal();
			ids.forEach(function(id){
				if(selecting.selectedToTrue){
					$("#" + id).addClass("selecting_to_true");
				} else {
					$("#" + id).addClass("selecting_to_false");
				}
			})
		};
		var clearSelectingReveal = function(){
			tableBox.find(".reveal").removeClass("selecting_to_true").removeClass("selecting_to_false");
		};
		window.getSelectingRange = function(startPoint, endPoint){
			var selRanges = [];
			var r = Math.min(startPoint.row, endPoint.row);
			var eRow = Math.max(startPoint.row, endPoint.row);
			do {
				var c = Math.min(startPoint.col, endPoint.col);
				var eCol = Math.max(startPoint.col, endPoint.col);
				do {
					selRanges.push({
						row: r,
						col: c
					});
					c += 1;
				} while(c <= eCol);
				r += 1;
			} while(r <= eRow);
			return selRanges;
		}
	})
</script>

